### C basics ###
-argv terminated by null pointer
  -argc not really needed
-macros are just a copy paste done at precompilinig stage

memset
malloc
calloc
realloc
fopen
fclose
getline - include use (free line after loop)
fseek
ftell
snprintf
sprintf
fprintf

special syntax:
extern
static

### Environment Variables ###
array of C strings
VAR=val

how to get environment vars?
  1. #include <stdio.h>
  2. extern char **environ;

where do the env vars live in the programs memory?
  on top of user space
    right above stack
  gets copied from program which exec'd

### Execution ###
exec family

### Long Jumps ###
setjmp
longjmp

### File I/O ###
syscalls:
  read
  write
  open
  close 
  seek
  unlink
  fdopen
  lseek?

Holes
  what?

  how to create?

### Files ###
types:
  directory
  symlink
  everything (hardlinks)
  i/o devices
  streams
  sockets

directories, files, inodes

get_uid

directory perms

hardlinks vs softlinks

opening & iterating over a directory in C

opendir
stat
lstat

### IO redirection ###
redirection from command line

redirection from code

dup & dup2

openfile table

### Creating Processes ###
what is a process?

fork

wait
waitpid

zombies & orphans

### Signals ###
sending a signal
  command line
  code

Signal disposition / handeling signals
default
ignore
(block)

### Pipes ###
what are they?

how do they work?

what are they used for?

### Handling multiple inputs ###
polling
asynchronus IO
blocking read (select)
threads

### Regular Expressions ###



###EXAM 1 ABOVE THIS POINT
### Basic Network Programming ###

### FIFO's ###

### Buffering ###

### Threads ###
#
#
C Programming

    See slides

    File I/O

        fopen, fread, fwrite, fclose, fseek, ftell

        fdopen, fileno

        fflush

    Struct

    Heap

    Parameter passing

        Functions as parameters

        Variable length parameter lists

        Arrays

    Typedef

    Casting

    errno

    environment

    Static local variables

    Macros

    Long jump

    extern / static

    Feature Test Macros

Processes

    Memory layout

    Environment

    fork, exec, wait, waitpid, exit, _exit

    exit status

    Orphan, zombie

 
Unix I/O

    Basic calls: open, close, read, write, lseek

    fcntl

    File system: 

        links (hard vs. soft)

        stat

        Directories

            DIR*, direntp, opendir, closedir, readdir, rewinddir

        fdopen, fileno

    Special files: /dev/null, dev/zero

    umask

    Pipes

        Need for / effect of closing read / write end

        popen, pclose.

    I/O redirection

        close / open

        open, close / dup

        open / dup2

    Holes

    I-node structure

Signals

    Sending a signal

        kill, raise

    Signal disposition

        SIG_IGN, SIG_DEF, SIG_ERR

        Signal handlers

    Signal blocking

        Signal mask

        With sigaction

        With sigprocmask

        With sigsuspend

    Long jumps

    Waiting for a signal

        pause, sigsuspend

    sleep

Unix command line

    find, ls, env, du

    globbing

    I/O redirection and piping

    Built-in commands: e.g., cd and exit

